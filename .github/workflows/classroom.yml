name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

#      - uses: nightstory/setup-yc@v1
#        with:
#          enable-cache: true
#
#      - name: Init yc
#        run: |
#          printf "${{secrets.CONTAINER_REGISTRY_ID}}\n1\n2\n"
#          yc init
#
#      - name: config kubectl
#        run: |
#          yc managed-kubernetes cluster get-credentials ${{secrets.K8S_CLUSTER_ID}} --external
#          kubectl cluster-info

#      - name: Setup kubernetes
#        run: |
#          kubectl config set-cluster savenko-cluster --certificate-authority=ca.pem --server="${{secrets.MASTER_ENDPOINT}}" --kubeconfig=savenko-cluster.kubeconfig
#          kubectl config set-credentials admin-user --token="${{secrets.SA_TOKEN}}" --kubeconfig=savenko-cluster.kubeconfig
#          kubectl config set-context default --cluster=savenko-cluster --user=admin-user --kubeconfig=savenko-cluster.kubeconfig
#          kubectl config use-context default --kubeconfig=savenko-cluster.kubeconfig
#          helm install library-system ./k8s/libsys-chart/
#          sleep 90
#      - name: Setup config for helm
#        run: |
#          mkdir ~/.kube
#          kubectl config view --raw > ~/.kube/config
#          kubectl config view --raw
#          install -D /dev/stdin ~/.kube/config

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Maven build packages
        run: mvn clean --batch-mode --update-snapshots verify -DskipTests

#      - name: Login to Docker container registry
#        run: docker login --username ${{secrets.CONTAINER_REGISTRY_USERNAME}} --password ${{secrets.CONTAINER_REGISTRY_TOKEN}} cr.yandex

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build docker images
        run: |
          docker build ./gateway-library-service/ --tag cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/gateway-service:v1.5
          docker build ./rating-service/ --tag cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/rating-service:v1.5
          docker build ./library-service/ --tag cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/library-service:v1.5
          docker build ./reservation-service/ --tag cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/reservation-service:v1.5

      - name: Push images to registry
        run: |
          docker push cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/gateway-service:v1.5
          docker push cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/rating-service:v1.5
          docker push cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/library-service:v1.5
          docker push cr.yandex/${{secrets.CONTAINER_REGISTRY_ID}}/reservation-service:v1.5

      - name: Setup kubernetes
        run: |
          echo "${{secrets.CA_PEM}}" > ca.pem
          kubectl config set-cluster yc-rsoi-cluster --server="${{secrets.MASTER_ENDPOINT}}" --kubeconfig=test.kubeconfig
          kubectl config set-credentials admin-user --token="${{secrets.SA_TOKEN}}" --kubeconfig=test.kubeconfig
          kubectl config set-context default --cluster=yc-rsoi-cluster --user=admin-user --kubeconfig=test.kubeconfig
          kubectl config use-context default --kubeconfig=test.kubeconfig

      - name: Install helm chart for library system
        run: |
          echo "-----kubeconfig view:"
          kubectl config view --flatten 
          echo "-----test.kubeconfig:"
          cat test.kubeconfig
          helm install library-system ./k8s/libsys-chart/ 
          sleep 90    


      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v4/postman/collection.json
          environment: v4/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 4
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"